{"version":3,"sources":["components/Sidebar.js","components/Editor.js","data.js","App.js","index.js"],"names":["Sidebar","props","noteElements","notes","map","note","index","className","id","currentNote","onClick","setCurrentNoteId","body","split","event","deleteNote","newNote","Editor","updateNote","React","useState","selectedTab","setSelectedTab","converter","Showdown","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","value","onChange","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","minEditorHeight","heightUnits","App","JSON","parse","localStorage","getItem","setNotes","useEffect","setItem","stringify","currentNoteId","createNewNote","nanoid","prevNotes","findCurrentNote","find","length","sizes","direction","noteId","stopPropagation","oldNotes","filter","text","newArray","i","oldNote","unshift","push","ReactDOM","render","document","getElementById"],"mappings":"gNAEe,SAASA,EAAQC,GAC9B,IAAMC,EAAeD,EAAME,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACnC,8BACE,sBACEC,UAAS,gBACPF,EAAKG,KAAOP,EAAMQ,YAAYD,GAAK,gBAAkB,IAEvDE,QAAS,kBAAMT,EAAMU,iBAAiBN,EAAKG,KAJ7C,UAME,oBAAID,UAAU,eAAd,SAA8BF,EAAKO,KAAKC,MAAM,MAAM,KAQpD,wBACEN,UAAU,aACVG,QAAS,SAACI,GAAD,OAAWb,EAAMc,WAAWD,EAAOT,EAAKG,KAFnD,SAIE,mBAAGD,UAAU,8BAnBTF,EAAKG,OAyBjB,OACE,0BAASD,UAAU,eAAnB,UACE,sBAAKA,UAAU,kBAAf,UACE,uCACA,wBAAQA,UAAU,WAAWG,QAAST,EAAMe,QAA5C,kBAIDd,K,qCCjCQ,SAASe,EAAT,GAA8C,IAA5BR,EAA2B,EAA3BA,YAAaS,EAAc,EAAdA,WAC1C,EAAsCC,IAAMC,SAAS,SAArD,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,IAAIC,IAASC,UAAU,CACrCC,QAAQ,EACRC,oBAAoB,EACpBC,eAAe,EACfC,WAAW,IAGf,OACI,yBAAStB,UAAU,cAAnB,SACI,cAAC,IAAD,CACIuB,MAAOrB,EAAYG,KACnBmB,SAAUb,EACVG,YAAaA,EACbW,YAAaV,EACbW,wBAAyB,SAACC,GAAD,OACrBC,QAAQC,QAAQb,EAAUc,SAASH,KAEvCI,gBAAiB,GACjBC,YAAY,SCzBrB,I,4BCSQ,SAASC,IAKtB,MAA0BrB,IAAMC,UAC9B,kBAAMqB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MADrD,mBAAOzC,EAAP,KAAc0C,EAAd,KAKA1B,IAAM2B,WAAU,WACdH,aAAaI,QAAQ,QAASN,KAAKO,UAAU7C,MAC5C,CAACA,IAEJ,MAA0CgB,IAAMC,SAC7CjB,EAAM,IAAMA,EAAM,GAAGK,IAAO,IAD/B,mBAAOyC,EAAP,KAAsBtC,EAAtB,KAIA,SAASuC,IACP,IAAMlC,EAAU,CACdR,GAAI2C,cACJvC,KAAM,0CAERiC,GAAS,SAACO,GAAD,OAAgBpC,GAAhB,mBAA4BoC,OACrCzC,EAAiBK,EAAQR,IAkC3B,SAAS6C,IACP,OACElD,EAAMmD,MAAK,SAACjD,GACV,OAAOA,EAAKG,KAAOyC,MACf9C,EAAM,GAIhB,OACE,+BACGA,EAAMoD,OAAS,EACd,eAAC,IAAD,CAAOC,MAAO,CAAC,GAAI,IAAKC,UAAU,aAAalD,UAAU,QAAzD,UACE,cAACP,EAAD,CACEG,MAAOA,EACPM,YAAa4C,IACb1C,iBAAkBA,EAClBK,QAASkC,EACTnC,WAvBV,SAAoBD,EAAO4C,GACzB5C,EAAM6C,kBACNd,GAAS,SAACe,GAAD,OAAcA,EAASC,QAAO,SAACxD,GAAD,OAAUA,EAAKG,KAAOkD,WAuBtDT,GAAiB9C,EAAMoD,OAAS,GAC/B,cAACtC,EAAD,CAAQR,YAAa4C,IAAmBnC,WAzClD,SAAoB4C,GAClBjB,GAAS,SAACe,GAER,IADA,IAAMG,EAAW,GACRC,EAAI,EAAGA,EAAIJ,EAASL,OAAQS,IAAK,CACxC,IAAMC,EAAUL,EAASI,GACrBC,EAAQzD,KAAOyC,EACjBc,EAASG,QAAT,2BAAsBD,GAAtB,IAA+BrD,KAAMkD,KAErCC,EAASI,KAAKF,GAGlB,OAAOF,WAkCL,sBAAKxD,UAAU,WAAf,UACE,mDACA,wBAAQA,UAAU,aAAaG,QAASwC,EAAxC,iCCxFVkB,IAASC,OAAO,cAAC7B,EAAD,IAAS8B,SAASC,eAAe,W","file":"static/js/main.fba8fc3e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Sidebar(props) {\n  const noteElements = props.notes.map((note, index) => (\n    <div key={note.id}>\n      <div\n        className={`title ${\n          note.id === props.currentNote.id ? \"selected-note\" : \"\"\n        }`}\n        onClick={() => props.setCurrentNoteId(note.id)}\n      >\n        <h4 className=\"text-snippet\">{note.body.split(\"\\n\")[0]}</h4>\n        {/* <button\n          className=\"delete-btn\"\n          // Your onClick event handler here\n          onClick={(event) => props.deleteNote(event, note.id)}\n        >\n          <i className=\"gg-trash trash-icon\"></i>\n        </button> */}\n        <button\n          className=\"delete-btn\"\n          onClick={(event) => props.deleteNote(event, note.id)}\n        >\n          <i className=\"gg-trash trash-icon\"></i>\n        </button>\n      </div>\n    </div>\n  ));\n\n  return (\n    <section className=\"pane sidebar\">\n      <div className=\"sidebar--header\">\n        <h3>Notes</h3>\n        <button className=\"new-note\" onClick={props.newNote}>\n          +\n        </button>\n      </div>\n      {noteElements}\n    </section>\n  );\n}\n","import React from \"react\"\nimport ReactMde from \"react-mde\"\nimport Showdown from \"showdown\"\n\nexport default function Editor({ currentNote, updateNote }) {\n    const [selectedTab, setSelectedTab] = React.useState(\"write\")\n\n    const converter = new Showdown.Converter({\n        tables: true,\n        simplifiedAutoLink: true,\n        strikethrough: true,\n        tasklists: true,\n    })  \n\n    return (\n        <section className=\"pane editor\">\n            <ReactMde\n                value={currentNote.body}\n                onChange={updateNote}\n                selectedTab={selectedTab}\n                onTabChange={setSelectedTab}\n                generateMarkdownPreview={(markdown) =>\n                    Promise.resolve(converter.makeHtml(markdown))\n                }\n                minEditorHeight={80}\n                heightUnits=\"vh\"\n            />\n        </section>\n    )\n}\n","export const data = [\n    {\n        id: 1,\n        body: `### This just in!\n\nMarkdown is an *awesome* way to write **very basic HTML** by typing manually\n\nIt can be used for:\n\n1. README files\n1. Slack and Discord messages\n1. **So much more!**\n\n---\n\nHere's a division üëÜ`,\n    },\n    { id: 2, body: `a` },\n    { id: 3, body: `b` },\n    { id: 4, body: `c` },\n    { id: 5, body: `d` },\n    { id: 6, body: `e` },\n]\n","import React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./style.css\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\n\nexport default function App() {\n  //const [notes, setNotes] = React.useState([]);\n  //Ï¥àÍ∏∞Í∞íÏùÑ jsonÏúºÎ°ú, or ÏÇ¨Ïö© Ï°∞Í±¥Î∂Ä Î†åÎçîÎßÅ ,\n  //cond && <p>hi</p> cond Í∞Ä Ï∞∏Ïù¥Î©¥ Îí∑ Î¨∏Ïû•ÏùÑ ÏãúÌñâ\n  //lazy\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n\n  //Ï†ÄÏû•\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  );\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  //ÏàúÏÑú Î∞îÍæ∏Í∏∞\n  // function updateNote(text) {\n  //   setNotes((oldNotes) =>\n  //     oldNotes.map((oldNote) => {\n  //       return oldNote.id === currentNoteId\n  //         ? { ...oldNote, body: text }\n  //         : oldNote;\n  //     })\n  //   );\n  // }\n  //Î∞∞Ïó¥Î¶¨ÌÑ¥ unshift\n  function updateNote(text) {\n    setNotes((oldNotes) => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote, body: text });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes((oldNotes) => oldNotes.filter((note) => note.id !== noteId));\n  }\n  //ÏúÑ Ìï∏Îì§Îü¨Î•º ÏÇ¨Ïù¥ÎìúÎ∞îÏóêÍ≤å Ï†ÑÎã¨\n\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Editor currentNote={findCurrentNote()} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}